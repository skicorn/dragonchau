@model dragonchau.Models.Staff

@{

    <style>
        .font-weight-bold {
            margin-top: 20px;
            font-weight: 600;
        }

        .text-1-add-staff {
            margin-top: 40px;
            font-weight: 600;
            margin-bottom: 40px;
        }
    </style>
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<nav style="--bs-breadcrumb-divider: url(&#34;data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8'%3E%3Cpath d='M2.5 0L1 1.5 3.5 4 1 6.5 2.5 8l4-4-4-4z' fill='currentColor'/%3E%3C/svg%3E&#34;);" aria-label="breadcrumb">
    <ol class="breadcrumb" style="color:black;">
        <li class="breadcrumb-item "><a href="/Home"><img src="~/Content/images/house-solid.svg" style="height:20px;width:20px;text-decoration:none;color:black;" /></a></li>
        <li class="breadcrumb-item "><a href="/Home" style="text-decoration: none; color: black;">Home</a></li>
        <li class="breadcrumb-item "><a href="/Staffs" style="text-decoration: none; color: black;">Staff</a></li>
        <li class="breadcrumb-item active" aria-current="page"><a href="/Staffs" style="text-decoration: none; color: black;">Edit Staff</a></li>
    </ol>
</nav>
<h4 class="font-weight-bold">Edit Staff</h4>
<div class="text-1-add-staff">Staff information</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div style="overflow:hidden;overflow-y:hidden;" class="container-create-staff">
        <div class="row">
            <div class="col-sm" style=" display: grid; grid-gap: 38px;">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.StaffID)

                <div class="form-group">
                    @Html.LabelFor(model => model.StaffName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.EditorFor(model => model.StaffName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StaffName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.StaffSalary, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.EditorFor(model => model.StaffSalary, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StaffSalary, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.StaffRole, "StaffRole", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("StaffRole", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StaffRole, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-sm" style="display: grid; grid-gap: 38px;">

                <div class="form-group">
                    @Html.LabelFor(model => model.StaffPhone, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.EditorFor(model => model.StaffPhone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StaffPhone, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.StaffIDnum, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.EditorFor(model => model.StaffIDnum, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StaffIDnum, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Account.StaffPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.EditorFor(model => model.Account.StaffPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Account.StaffPassword, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-sm" style=" display: grid; grid-gap: 38px;">

                <div class="form-group">
                    @Html.LabelFor(model => model.StaffEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.EditorFor(model => model.StaffEmail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StaffEmail, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.StaffDateCreate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.EditorFor(model => model.StaffDateCreate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StaffDateCreate, "", new { @class = "text-danger" })
                    </div>
                </div>


            </div>
        </div>
    </div>
    <div class="position-fixed start-50 bottom-0 translate-middle-x w-100 zi-99 mb-3" style="max-width: 40rem;">
        <!-- Card -->
        <div class="card card-sm bg-dark border-dark mx-2">
            <div class="card-body">
                <div class="row justify-content-center justify-content-sm-between">
                    <div class="col" style=" display: flex; align-items: center;">

                    </div>
                    <!-- End Col -->

                    <div class="col-auto">
                        <div class="d-flex gap-3">

                            <input type="submit" value="Edit" class="btn btn-primary" style="color:#fff;" />
                            <button type="button" class="btn btn-ghost-light" style="color:#fff">  @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-ghost-light text-white" })</button>

                        </div>
                    </div>
                    <!-- End Col -->
                </div>
                <!-- End Row -->
            </div>
        </div>
        <!-- End Card -->
    </div>



}










@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
